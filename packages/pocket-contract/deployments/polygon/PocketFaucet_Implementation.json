{
  "address": "0x440Aaa9e96614c442c144453F2b319C5333C3bC8",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "child",
          "type": "address"
        }
      ],
      "name": "ChildAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddr",
          "type": "address"
        }
      ],
      "name": "ChildAddrChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "child",
          "type": "address"
        }
      ],
      "name": "ChildRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CoinWithdrawed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ceiling",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "child",
          "type": "address"
        }
      ],
      "name": "ConfigChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "child",
          "type": "address"
        }
      ],
      "name": "FundsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "child",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "parent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "child",
          "type": "address"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddr",
          "type": "address"
        }
      ],
      "name": "ParentChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrawed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_trustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "child",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ceiling",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "periodicity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct PocketFaucet.InitConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "addChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "child",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ceiling",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "periodicity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct PocketFaucet.InitConfig",
          "name": "config",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "addChildAndFundsPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "child",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "child",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "addFundsPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "baseTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newAddr",
          "type": "address"
        }
      ],
      "name": "changeChildAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "child",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ceiling",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodicity",
          "type": "uint256"
        }
      ],
      "name": "changeConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddr",
          "type": "address"
        }
      ],
      "name": "changeParentAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "childToConfig",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ceiling",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastClaim",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodicity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "parent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "child",
          "type": "address"
        }
      ],
      "name": "computeClaimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "parent",
          "type": "address"
        }
      ],
      "name": "getNumberChildren",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "parentToChildren",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "child",
          "type": "address"
        }
      ],
      "name": "removeChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "child",
          "type": "address"
        }
      ],
      "name": "setActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "child",
          "type": "address"
        }
      ],
      "name": "withdrawFundsFromChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3a91bdf18a0a0a208087a417ab57f10ad0565d022ff27f97f9551dd29ecc5682",
  "receipt": {
    "to": null,
    "from": "0x76A02bB3d4E6fCb32643A9cA38569f1A959b9d2c",
    "contractAddress": "0x440Aaa9e96614c442c144453F2b319C5333C3bC8",
    "transactionIndex": 52,
    "gasUsed": "2480691",
    "logsBloom": "0x
    "blockHash": "0x25d77f62c038f259c855d9d9fd1386fc72d9036bf31e3a2fb37c3c64c3cefb70",
    "transactionHash": "0x3a91bdf18a0a0a208087a417ab57f10ad0565d022ff27f97f9551dd29ecc5682",
    "logs": [
      {
        "transactionIndex": 52,
        "blockNumber": 34164799,
        "transactionHash": "0x3a91bdf18a0a0a208087a417ab57f10ad0565d022ff27f97f9551dd29ecc5682",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000076a02bb3d4e6fcb32643a9ca38569f1a959b9d2c",
          "0x0000000000000000000000001efecb61a2f80aa34d3b9218b564a64d05946290"
        ],
        "data": "0x00000000000000000000000000000000000000000000000001086542785086ff0000000000000000000000000000000000000000000000000d9c13ba5ae514bf0000000000000000000000000000000000000000000014b444064b55ac19081f0000000000000000000000000000000000000000000000000c93ae77e2948dc00000000000000000000000000000000000000000000014b4450eb09824698f1e",
        "logIndex": 208,
        "blockHash": "0x25d77f62c038f259c855d9d9fd1386fc72d9036bf31e3a2fb37c3c64c3cefb70"
      }
    ],
    "blockNumber": 34164799,
    "cumulativeGasUsed": "18509658",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4e1b178e7952485d72b0a55535a4627e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"}],\"name\":\"ChildAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"ChildAddrChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"}],\"name\":\"ChildRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CoinWithdrawed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ceiling\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"}],\"name\":\"ConfigChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"}],\"name\":\"FundsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"ParentChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ceiling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodicity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct PocketFaucet.InitConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"addChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ceiling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodicity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct PocketFaucet.InitConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addChildAndFundsPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addFundsPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"baseTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"changeChildAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ceiling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodicity\",\"type\":\"uint256\"}],\"name\":\"changeConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"changeParentAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"childToConfig\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ceiling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodicity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"}],\"name\":\"computeClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"}],\"name\":\"getNumberChildren\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"parentToChildren\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"}],\"name\":\"removeChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"}],\"name\":\"setActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"child\",\"type\":\"address\"}],\"name\":\"withdrawFundsFromChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Guillaume Dupont, Sami Darnaud, Solal Dunckel, Theo Palhol\",\"custom:experimental\":\"This is an experimental contract. It should not be used in production.\",\"kind\":\"dev\",\"methods\":{\"addChild(address,(uint256,uint256,uint256))\":{\"params\":{\"child\":\"is the address of the child.\",\"config\":\"contains various element of the config: periodicity, indexToken and ceiling\"}},\"addChildAndFundsPermit(address,(uint256,uint256,uint256),uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"is the number of tokens that the child's account should be credited.\",\"child\":\"is the address of the child.\"}},\"addFunds(address,uint256)\":{\"params\":{\"amount\":\"is the amount of tokens to add.\",\"child\":\"is the address of the child.\"}},\"addFundsPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"is the amount of tokens to add.\",\"child\":\"is the address of the child.\"}},\"changeChildAddress(address,address)\":{\"params\":{\"newAddr\":\"is the new address of your child.\",\"oldAddr\":\"is the previous address of your child.\"}},\"changeConfig(address,uint256,uint256)\":{\"params\":{\"ceiling\":\"is the amount of token the child can claim.\",\"child\":\"is the address of the child.\",\"periodicity\":\"is the time that must pass between each claim, in seconds.\"}},\"changeParentAddr(address)\":{\"params\":{\"newAddr\":\"is the address of the child.\"}},\"computeClaimable(address)\":{\"details\":\"Computes the amount of token the child can claim.\",\"params\":{\"child\":\"is the child for which we compute the claimable amount.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getNumberChildren(address)\":{\"params\":{\"parent\":\"The address of the parent account\"},\"returns\":{\"_0\":\"childNb as a uint256.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeChild(address)\":{\"details\":\"This function properly updates the parentToChildren array by removing the address of the child and making sure there is no gap inside the array.\",\"params\":{\"child\":\"is the address of the child.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setActive(bool,address)\":{\"params\":{\"active\":\"the future value of conf.active.\",\"child\":\"the child to activate or desactivate the account.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFundsFromChild(uint256,address)\":{\"params\":{\"amount\":\"is the amount of tokens to withdraw.\",\"child\":\"is the address of the child.\"}}},\"title\":\"A pocket money faucet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addChild(address,(uint256,uint256,uint256))\":{\"notice\":\"Add a child to a parent address\"},\"addChildAndFundsPermit(address,(uint256,uint256,uint256),uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Add a child to a parent address + add funds to the child account.\"},\"addFunds(address,uint256)\":{\"notice\":\"Add `amount` to your child `child` account.\"},\"addFundsPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Add `amount` to your child `child` account.\"},\"changeChildAddress(address,address)\":{\"notice\":\"This will change your child address: `oldAddr` is now `newAddr`.\"},\"changeConfig(address,uint256,uint256)\":{\"notice\":\"This will set your child: `child` config to the following values: ceiling: `ceiling`, periodicity: `periodicity`.\"},\"changeParentAddr(address)\":{\"notice\":\"You will change your address from `_msgSender()` to `newAddr`\"},\"claim()\":{\"notice\":\"You will receive the pocket money your parent deposited for you.\"},\"getNumberChildren(address)\":{\"notice\":\"This returns the number of children asssociated to an address\"},\"removeChild(address)\":{\"notice\":\"Removes `child` from your account and transfers all the founds associated to him to your address.\"},\"setActive(bool,address)\":{\"notice\":\"This transaction will set the active variable to `active`. If the value is false, your child: `child` won't be able to claim anymore.\"},\"withdrawFundsFromChild(uint256,address)\":{\"notice\":\"You will withdraw `amount` from your child account `child`. If amount is 0, it will wihdraw all its balance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PocketFaucet.sol\":\"PocketFaucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/draft-IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/ERC2771ContextUpgradeableCustom.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (metatx/ERC2771Context.sol)\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Context variant with ERC2771 support.\\n */\\nabstract contract ERC2771ContextUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address public _trustedForwarder;\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor(address trustedForwarder) {\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    function _msgSender() internal view virtual override returns (address sender) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n            }\\n        } else {\\n            return super._msgSender();\\n        }\\n    }\\n\\n    function _msgData() internal view virtual override returns (bytes calldata) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            return msg.data[:msg.data.length - 20];\\n        } else {\\n            return super._msgData();\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xaa712c5885291531b5171cd9c656d712c4e3b6840bec80f3fa798444eee70fd0\",\"license\":\"MIT\"},\"contracts/PocketFaucet.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.9;\\n\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport './ERC2771ContextUpgradeableCustom.sol';\\n\\n\\n/// @title A pocket money faucet\\n/// @author Guillaume Dupont, Sami Darnaud, Solal Dunckel, Theo Palhol\\n/// @custom:experimental This is an experimental contract. It should not be used in production.\\n\\ncontract PocketFaucet is OwnableUpgradeable, ERC2771ContextUpgradeable {\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    address[] public baseTokens;\\n    mapping(address => address[]) public parentToChildren;\\n    mapping(address => Config) public childToConfig;\\n\\n    event ChildAdded(address indexed parent, address indexed child);\\n    event ChildRemoved(address indexed parent, address indexed child);\\n    event TokenWithdrawed(address indexed token, uint256 amount);\\n    event CoinWithdrawed(uint256 amount);\\n    event ConfigChanged(bool active, uint256 ceiling, address indexed child);\\n    event ParentChanged(address indexed oldAddr, address newAddr);\\n    event FundsWithdrawn(\\n        address indexed parent,\\n        uint256 amount,\\n        address indexed child\\n    );\\n    event ChildAddrChanged(address oldAddr, address newAddr);\\n    event FundsAdded(\\n        uint256 timestamp,\\n        address indexed parent,\\n        uint256 amount,\\n        address indexed child\\n    );\\n    event FundsClaimed(\\n        uint256 timestamp,\\n        address indexed child,\\n        uint256 amount\\n    );\\n\\n    struct Config {\\n        bool active;\\n        uint256 balance;\\n        uint256 ceiling;\\n        uint256 lastClaim;\\n        uint256 periodicity;\\n        address parent;\\n        uint256 tokenIndex;\\n    }\\n\\n    struct InitConfig {\\n        uint256 ceiling;\\n        uint256 periodicity;\\n        uint256 tokenIndex;\\n    }\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() ERC2771ContextUpgradeable(address(0)) {}\\n\\n    function setTrustedForwarder(address trustedForwarder) public onlyOwner {\\n        ERC2771ContextUpgradeable._trustedForwarder = trustedForwarder;\\n    }\\n\\n    function initialize(address token, address trustedForwarder)\\n        public\\n        initializer\\n    {\\n        baseTokens.push(token);\\n        __Ownable_init_unchained();\\n        setTrustedForwarder(trustedForwarder);\\n    }\\n\\n    function _msgSender()\\n        internal\\n        view\\n        virtual\\n        override(ContextUpgradeable, ERC2771ContextUpgradeable)\\n        returns (address sender)\\n    {\\n        sender = ERC2771ContextUpgradeable._msgSender();\\n    }\\n\\n    function _msgData()\\n        internal\\n        view\\n        virtual\\n        override(ContextUpgradeable, ERC2771ContextUpgradeable)\\n        returns (bytes calldata)\\n    {\\n        return ERC2771ContextUpgradeable._msgData();\\n    }\\n\\n    /// @notice This checks that the child address and parent address are properly bind in the contract.\\n    /// @param parent is the parent address\\n    /// @param child is the child address\\n    modifier areRelated(address parent, address child) {\\n        require(child != address(0), '!areRelated: null child address');\\n        require(child != address(0), '!areRelated: null parent address');\\n        bool isChild;\\n        uint256 length = parentToChildren[parent].length;\\n        for (uint256 i = 0; i < length; ) {\\n            if (parentToChildren[parent][i] == child) {\\n                isChild = true;\\n                break;\\n            }\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n        require(isChild, \\\"!areRelated: child doesn't match\\\");\\n        require(\\n            childToConfig[child].parent == parent,\\n            \\\"!areRelated: parent doesn't match\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @notice This returns the number of children asssociated to an address\\n    /// @param parent The address of the parent account\\n    /// @return childNb as a uint256.\\n    function getNumberChildren(address parent) public view returns (uint256) {\\n        return parentToChildren[parent].length;\\n    }\\n\\n    /// @notice Add a child to a parent address\\n    /// @param config contains various element of the config: periodicity, indexToken and ceiling\\n    /// @param child is the address of the child.\\n    function addChild(address child, InitConfig calldata config) public {\\n        require(child != address(0), '!addChild: Address is null');\\n        require(\\n            childToConfig[child].parent == address(0),\\n            '!addChild: Child address already taken'\\n        );\\n        require(config.periodicity != 0, '!addChild: periodicity cannot be 0');\\n        Config memory newConf = Config(\\n            true,\\n            0,\\n            config.ceiling,\\n            block.timestamp - config.periodicity,\\n            config.periodicity,\\n            _msgSender(),\\n            config.tokenIndex\\n        );\\n\\n        childToConfig[child] = newConf;\\n        parentToChildren[_msgSender()].push(child);\\n        emit ChildAdded(_msgSender(), child);\\n    }\\n\\n    /// @notice Add a child to a parent address + add funds to the child account.\\n    /// @param child is the address of the child.\\n    /// @param amount is the number of tokens that the child's account should be credited.\\n    function addChildAndFundsPermit(\\n        address child,\\n        InitConfig calldata config,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        addChild(child, config);\\n        addFundsPermit(child, amount, deadline, v, r, s);\\n    }\\n\\n    /// @notice Add `amount` to your child `child` account.\\n    /// @param amount is the amount of tokens to add.\\n    /// @param child is the address of the child.\\n    function addFunds(address child, uint256 amount)\\n        public\\n        areRelated(_msgSender(), child)\\n    {\\n        childToConfig[child].balance += amount;\\n        emit FundsAdded(block.timestamp, _msgSender(), amount, child);\\n        IERC20Upgradeable(baseTokens[childToConfig[child].tokenIndex])\\n            .safeTransferFrom(_msgSender(), address(this), amount);\\n    }\\n\\n    /// @notice Add `amount` to your child `child` account.\\n    /// @param amount is the amount of tokens to add.\\n    /// @param child is the address of the child.\\n    function addFundsPermit(\\n        address child,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public areRelated(_msgSender(), child) {\\n        IERC20PermitUpgradeable(baseTokens[childToConfig[child].tokenIndex])\\n            .permit(_msgSender(), address(this), amount, deadline, v, r, s);\\n        addFunds(child, amount);\\n    }\\n\\n    /// @notice Removes `child` from your account and transfers all the founds associated to him to your address.\\n    /// @param child is the address of the child.\\n    /// @dev This function properly updates the parentToChildren array by removing the address of the child and making sure there is no gap inside the array.\\n    function removeChild(address child)\\n        external\\n        areRelated(_msgSender(), child)\\n    {\\n        Config memory childConfig = childToConfig[child];\\n\\n        uint256 length = parentToChildren[childConfig.parent].length;\\n        for (uint256 i = 0; i < length; ) {\\n            if (parentToChildren[childConfig.parent][i] == child) {\\n                parentToChildren[childConfig.parent][i] = parentToChildren[\\n                    childConfig.parent\\n                ][length - 1];\\n                delete (parentToChildren[childConfig.parent][length - 1]);\\n                break;\\n            }\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        uint256 childBalance = childToConfig[child].balance;\\n        uint256 tokenIndex = childToConfig[child].tokenIndex;\\n        delete childToConfig[child];\\n        emit ChildRemoved(childConfig.parent, child);\\n\\n        IERC20Upgradeable(baseTokens[tokenIndex]).safeTransfer(\\n            _msgSender(),\\n            childBalance\\n        );\\n    }\\n\\n    /// @notice This transaction will set the active variable to `active`. If the value is false, your child: `child` won't be able to claim anymore.\\n    /// @param active the future value of conf.active.\\n    /// @param child the child to activate or desactivate the account.\\n    function setActive(bool active, address child)\\n        public\\n        areRelated(_msgSender(), child)\\n    {\\n        Config storage conf = childToConfig[child];\\n        conf.active = active;\\n        if (conf.active) conf.lastClaim = block.timestamp - conf.periodicity;\\n    }\\n\\n    /// @notice This will set your child: `child` config to the following values: ceiling: `ceiling`, periodicity: `periodicity`.\\n    /// @param ceiling is the amount of token the child can claim.\\n    /// @param periodicity is the time that must pass between each claim, in seconds.\\n    /// @param child is the address of the child.\\n    function changeConfig(\\n        address child,\\n        uint256 ceiling,\\n        uint256 periodicity\\n    ) public areRelated(_msgSender(), child) {\\n        Config storage conf = childToConfig[child];\\n        require(periodicity != 0, '!changeConfig: periodicity cannot be 0');\\n        conf.ceiling = ceiling;\\n        conf.periodicity = periodicity;\\n        emit ConfigChanged(conf.active, conf.ceiling, child);\\n    }\\n\\n    /// @notice This will change your child address: `oldAddr` is now `newAddr`.\\n    /// @param oldAddr is the previous address of your child.\\n    /// @param newAddr is the new address of your child.\\n    function changeChildAddress(address oldAddr, address newAddr)\\n        public\\n        areRelated(_msgSender(), oldAddr)\\n    {\\n        Config memory conf = childToConfig[oldAddr];\\n        require(\\n            childToConfig[newAddr].parent == address(0),\\n            '!changeChildAddress: child already exists'\\n        );\\n\\n        childToConfig[newAddr] = conf;\\n        uint256 length = parentToChildren[conf.parent].length;\\n        for (uint256 i = 0; i < length; ) {\\n            if (parentToChildren[conf.parent][i] == oldAddr) {\\n                parentToChildren[conf.parent][i] = newAddr;\\n                break;\\n            }\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n        delete (childToConfig[oldAddr]);\\n\\n        emit ChildAddrChanged(oldAddr, newAddr);\\n    }\\n\\n    /// @notice You will withdraw `amount` from your child account `child`. If amount is 0, it will wihdraw all its balance.\\n    /// @param amount is the amount of tokens to withdraw.\\n    /// @param child is the address of the child.\\n    function withdrawFundsFromChild(uint256 amount, address child)\\n        public\\n        areRelated(_msgSender(), child)\\n    {\\n        Config storage conf = childToConfig[child];\\n        uint256 childBalance = conf.balance;\\n        require(\\n            amount <= childBalance,\\n            '!withdrawFundsFromChild: amount > childBalance'\\n        );\\n        if (amount == 0) amount = childBalance;\\n        conf.balance -= amount;\\n        emit FundsWithdrawn(_msgSender(), amount, child);\\n        IERC20Upgradeable(baseTokens[childToConfig[child].tokenIndex])\\n            .safeTransfer(_msgSender(), amount);\\n    }\\n\\n    /// @dev Computes the amount of token the child can claim.\\n    /// @param child is the child for which we compute the claimable amount.\\n    function computeClaimable(address child) public view returns (uint256) {\\n        Config memory conf = childToConfig[child];\\n        if (conf.periodicity == 0) return 0;\\n        if (conf.lastClaim + conf.periodicity > block.timestamp) return 0;\\n        uint256 nbPeriod = (block.timestamp - conf.lastClaim) /\\n            conf.periodicity;\\n        uint256 claimable = conf.ceiling * nbPeriod;\\n        return (claimable < conf.balance ? claimable : conf.balance);\\n    }\\n\\n    /// @notice You will receive the pocket money your parent deposited for you.\\n    function claim() public {\\n        Config storage conf = childToConfig[_msgSender()];\\n        require(conf.active, '!claim: not active');\\n        require(conf.balance > 0, '!claim: null balance');\\n        require(\\n            childToConfig[_msgSender()].active,\\n            '!claim: account is inactive'\\n        );\\n\\n        uint256 claimable = computeClaimable(_msgSender());\\n        require(claimable != 0, '!claim: nothing to claim');\\n        uint256 nbPeriod = (block.timestamp - conf.lastClaim) /\\n            conf.periodicity;\\n        conf.lastClaim = conf.lastClaim + conf.periodicity * nbPeriod;\\n\\n        conf.balance -= claimable;\\n        emit FundsClaimed(block.timestamp, _msgSender(), claimable);\\n        IERC20Upgradeable(baseTokens[conf.tokenIndex]).safeTransfer(\\n            _msgSender(),\\n            claimable\\n        );\\n    }\\n\\n    /// @notice You will change your address from `_msgSender()` to `newAddr`\\n    /// @param newAddr is the address of the child.\\n    function changeParentAddr(address newAddr) public {\\n        require(\\n            _msgSender() != newAddr,\\n            '!changeParentAddr : cannot change to same addr'\\n        );\\n        address[] storage children = parentToChildren[_msgSender()];\\n        uint256 nbChildren = children.length;\\n\\n        for (int256 i = int256(nbChildren) - 1; i >= 0; i--) {\\n            childToConfig[children[uint256(i)]].parent = newAddr;\\n            parentToChildren[newAddr].push(children[uint256(i)]);\\n            children.pop();\\n        }\\n        emit ParentChanged(_msgSender(), newAddr);\\n    }\\n\\n    function withdrawCoin(uint256 amount) public onlyOwner {\\n        if (amount == 0) amount = address(this).balance;\\n        emit CoinWithdrawed(amount);\\n        payable(_msgSender()).transfer(amount);\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xde0678c1527aba2026d892558d982b124e5cc685da225c9988b3551194ef6c8f\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Guillaume Dupont, Sami Darnaud, Solal Dunckel, Theo Palhol",
    "custom:experimental": "This is an experimental contract. It should not be used in production.",
    "kind": "dev",
    "methods": {
      "addChild(address,(uint256,uint256,uint256))": {
        "params": {
          "child": "is the address of the child.",
          "config": "contains various element of the config: periodicity, indexToken and ceiling"
        }
      },
      "addChildAndFundsPermit(address,(uint256,uint256,uint256),uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "amount": "is the number of tokens that the child's account should be credited.",
          "child": "is the address of the child."
        }
      },
      "addFunds(address,uint256)": {
        "params": {
          "amount": "is the amount of tokens to add.",
          "child": "is the address of the child."
        }
      },
      "addFundsPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "amount": "is the amount of tokens to add.",
          "child": "is the address of the child."
        }
      },
      "changeChildAddress(address,address)": {
        "params": {
          "newAddr": "is the new address of your child.",
          "oldAddr": "is the previous address of your child."
        }
      },
      "changeConfig(address,uint256,uint256)": {
        "params": {
          "ceiling": "is the amount of token the child can claim.",
          "child": "is the address of the child.",
          "periodicity": "is the time that must pass between each claim, in seconds."
        }
      },
      "changeParentAddr(address)": {
        "params": {
          "newAddr": "is the address of the child."
        }
      },
      "computeClaimable(address)": {
        "details": "Computes the amount of token the child can claim.",
        "params": {
          "child": "is the child for which we compute the claimable amount."
        }
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "getNumberChildren(address)": {
        "params": {
          "parent": "The address of the parent account"
        },
        "returns": {
          "_0": "childNb as a uint256."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeChild(address)": {
        "details": "This function properly updates the parentToChildren array by removing the address of the child and making sure there is no gap inside the array.",
        "params": {
          "child": "is the address of the child."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setActive(bool,address)": {
        "params": {
          "active": "the future value of conf.active.",
          "child": "the child to activate or desactivate the account."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawFundsFromChild(uint256,address)": {
        "params": {
          "amount": "is the amount of tokens to withdraw.",
          "child": "is the address of the child."
        }
      }
    },
    "title": "A pocket money faucet",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addChild(address,(uint256,uint256,uint256))": {
        "notice": "Add a child to a parent address"
      },
      "addChildAndFundsPermit(address,(uint256,uint256,uint256),uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Add a child to a parent address + add funds to the child account."
      },
      "addFunds(address,uint256)": {
        "notice": "Add `amount` to your child `child` account."
      },
      "addFundsPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Add `amount` to your child `child` account."
      },
      "changeChildAddress(address,address)": {
        "notice": "This will change your child address: `oldAddr` is now `newAddr`."
      },
      "changeConfig(address,uint256,uint256)": {
        "notice": "This will set your child: `child` config to the following values: ceiling: `ceiling`, periodicity: `periodicity`."
      },
      "changeParentAddr(address)": {
        "notice": "You will change your address from `_msgSender()` to `newAddr`"
      },
      "claim()": {
        "notice": "You will receive the pocket money your parent deposited for you."
      },
      "getNumberChildren(address)": {
        "notice": "This returns the number of children asssociated to an address"
      },
      "removeChild(address)": {
        "notice": "Removes `child` from your account and transfers all the founds associated to him to your address."
      },
      "setActive(bool,address)": {
        "notice": "This transaction will set the active variable to `active`. If the value is false, your child: `child` won't be able to claim anymore."
      },
      "withdrawFundsFromChild(uint256,address)": {
        "notice": "You will withdraw `amount` from your child account `child`. If amount is 0, it will wihdraw all its balance."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 138,
        "contract": "contracts/PocketFaucet.sol:PocketFaucet",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 141,
        "contract": "contracts/PocketFaucet.sol:PocketFaucet",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1020,
        "contract": "contracts/PocketFaucet.sol:PocketFaucet",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/PocketFaucet.sol:PocketFaucet",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "contracts/PocketFaucet.sol:PocketFaucet",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1033,
        "contract": "contracts/PocketFaucet.sol:PocketFaucet",
        "label": "_trustedForwarder",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 1107,
        "contract": "contracts/PocketFaucet.sol:PocketFaucet",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 1127,
        "contract": "contracts/PocketFaucet.sol:PocketFaucet",
        "label": "baseTokens",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1132,
        "contract": "contracts/PocketFaucet.sol:PocketFaucet",
        "label": "parentToChildren",
        "offset": 0,
        "slot": "153",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 1137,
        "contract": "contracts/PocketFaucet.sol:PocketFaucet",
        "label": "childToConfig",
        "offset": 0,
        "slot": "154",
        "type": "t_mapping(t_address,t_struct(Config)1220_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Config)1220_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct PocketFaucet.Config)",
        "numberOfBytes": "32",
        "value": "t_struct(Config)1220_storage"
      },
      "t_struct(Config)1220_storage": {
        "encoding": "inplace",
        "label": "struct PocketFaucet.Config",
        "members": [
          {
            "astId": 1207,
            "contract": "contracts/PocketFaucet.sol:PocketFaucet",
            "label": "active",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1209,
            "contract": "contracts/PocketFaucet.sol:PocketFaucet",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1211,
            "contract": "contracts/PocketFaucet.sol:PocketFaucet",
            "label": "ceiling",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1213,
            "contract": "contracts/PocketFaucet.sol:PocketFaucet",
            "label": "lastClaim",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1215,
            "contract": "contracts/PocketFaucet.sol:PocketFaucet",
            "label": "periodicity",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1217,
            "contract": "contracts/PocketFaucet.sol:PocketFaucet",
            "label": "parent",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 1219,
            "contract": "contracts/PocketFaucet.sol:PocketFaucet",
            "label": "tokenIndex",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}